Testing service with http requests:
We use this beforeEach required before each request.

Here we import required HttpClientTestingModule.
In providers array we declare service to be tested.

Finaly inject CourseService and HttpTestingController as Dependency.
    beforeEach(() => {
        TestBed.configureTestingModule({
            imports: [
                HttpClientTestingModule
            ],
            providers: [
                CoursesService
            ]
        });
        coursesService = TestBed.inject(CoursesService),
        httpTestingController = TestBed.inject(HttpTestingController);
    });


HttpClientTestingModule â€” a module that provides all of the tools that we need to properly test Angular HTTP Services
HttpTestingController service to mock requests instead of making real API requests to our API back-end when testing.
-------------------------------------------------------------------------------
In test specification starting with it() we test the api call.
Example:
    it('should retrieve all courses', () => {
        coursesService.findAllCourses()
            .subscribe(courses => {
                expect(courses).toBeTruthy('No courses returned');
                expect(courses.length).toBe(12,"incorrect number of courses");
                const course = courses.find(course => course.id == 12);
                expect(course.titles.description).toBe("Angular Testing Course");
            });
        const req = httpTestingController.expectOne('/api/courses');
        expect(req.request.method).toEqual("GET");
        req.flush({payload: Object.values(COURSES)});
    });
-------------------------------------------------------------------------------
Finally, we call the verify method on our HttpTestingController instance to ensure that there are no outstanding requests to be made.
afterEach(() => {
        httpTestingController.verify();
    });
-------------------------------------------------------------------------------




















