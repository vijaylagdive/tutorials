Reducer:
- Contains state changing logic and passes data to store.
- As a result new composed state is created and saved in the store.
- Reducers in NgRx are responsible for handling transitions from one state to the next state in your application. 
- Reducer functions handle these transitions by determining which actions to handle based on the action's type. 
- Reducers are pure functions that are the only ones that can change state. 
- They are not really changing state but making a copy of existing state and changing one or more properties on the new state.
- The reducer examines the action dispatched, reads the action's payload, performs the appropriate action on the state within the Store, 
and produces a new state object containing all of the changes. 

A reducer could be something like this:

function reducer(state: State, action: Action) {
    const actionType = action.type;
    const employee= action.payload;

    switch (actionType) {
        case 'ADD_EMPLOYEES': {
            const employees= [...state.employees, employee];
            return { employees}
        }
        ...
    }
}