Encapsulation:


Encapsulation:
Encapsulation refers to the bundling of data and methods that operate on that data within a single unit, which is called a class in Java. 
Encapsulation is a way of hiding the implementation details of a class from outside access and only exposing a public interface that can be used to interact with the class.
.
In Java, encapsulation is achieved by declaring the instance variables of a class as private, which means they can only be accessed within the class. 
To allow outside access to the instance variables,public methods called getters and setters are defined.
This methods are used to retrieve and modify the values of the instance variables. 
By using getters and setters, the class can enforce its own data validation rules and ensure that its internal state remains consistent.
.
Encapsulation is the process of hiding internal data and methods of a class and
exposing only what is necessary through access modifiers (e.g., private, public,
protected).

Example:

class Person { 
    private String name; 
    private int age; 
  
    public String getName() { return name; } 
  
    public void setName(String name) { this.name = name; } 
  
    public int getAge() { return age; } 
  
    public void setAge(int age) { this.age = age; } 
} 

public class Main { 
    public static void main(String[] args) 
    { 
        Person person = new Person(); 
        person.setName("John"); 
        person.setAge(30); 
  
        System.out.println("Name: " + person.getName()); 
        System.out.println("Age: " + person.getAge()); 
    } 
}

op:
Name: John
Age: 30


Encapsulation is defined as the wrapping up of data under a single unit. 
It is the mechanism that binds together data and the code which manipulates the code. 
Another way to think about encapsulation is, that it is a protective shield that prevents the data from being accessed by the code outside this shield. 

Example:
class Area { 
  
    int length; 
    int breadth; 
  
    // constructor to initialize values 
    Area(int length, int breadth) 
    { 
        this.length = length; 
        this.breadth = breadth; 
    } 
  
    // method to calculate area 
    public void getArea() 
    { 
        int area = length * breadth; 
        System.out.println("Area: " + area); 
    } 
} 
  
class Main { 
    public static void main(String[] args) 
    { 
  
        Area rectangle = new Area(2, 16); 
        rectangle.getArea(); 
    } 
}




