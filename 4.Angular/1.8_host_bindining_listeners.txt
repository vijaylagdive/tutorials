Q4. What is hostbinding?
Hostbinding
In Angular, host binding is a feature that allows you to set or bind properties of the host element from within the component class. 
It is often used to dynamically control how the component behaves and appears in the DOM.
.
Host element: the element that represents the component.
.
In Angular, the @HostBinding() function decorator allows you to set the properties of the host element from the directive class.
.
Let's say you want to change the style properties such as height, width, color, margin, border, etc., or any other internal properties of the host element in the directive class. 
Here, you'd need to use the @HostBinding() decorator function to access these properties on the host element and assign a value to it in directive class.
.
The @HostBinding() decorator takes one parameter, the name of the host element property which value we want to assign in the directive.
.
In our example, our host element is an HTML div element. 
If you want to set border properties of the host element, you can do that using @HostBinding() decorator as shown below:
.
@HostBinding('style.border') border: string;
.
@HostListener('mouseover') onMouseOver() {
    this.border = '5px solid green';
}

---------------------------------------------------------------------------------------------------------------------
Q5. What is hostlistener?
HostListener:
In Angular, HostListener is a decorator that allows you to listen for events on the host element 
and respond to those events with custom functionality defined in the component class.
.
(the element representing the component) 
HostListener is used to capture any event of the host element.
HostListener help us to listen and handle event of host element.
.
HostElement: The element to which we apply our directive is the host element to that particular directive.

Example:
Contains both host binding and listeners

<p appMycolor>I am from directive</p> //appMyColor is the directive we are using.

import { Directive, HostBinding, HostListener } from '@angular/core';
@Directive({
  selector: '[appMycolor]'
})
export class MycolorDirective {
 
 constructor() { }
 @HostBinding('style.color') myColor = "red";
 
 @HostListener('click') myClick(){
     console.log("Clicked from Hostlistener");
  };
 
 @HostListener('mouseover') myHover(){
    console.log("Clicked from Hostlistener Hover");
 };
}
}
---------------------------------------------------------------------------------------------------------------------