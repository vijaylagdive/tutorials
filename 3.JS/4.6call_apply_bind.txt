Q15. what is call(), apply(), bind()?
Ans: 
call()
- Its a predefined JS method and its a concept of function borrowing from other object.
- It can be used to invoke or call a function with an owner object as an argument with other arguments provided individually.
- The call() allows for a function/method belonging to one object to be assigned and called for a different object.
- Call method accepts object as first arguments and another needed argument.


Example 1:
const Car = {
    printName : function(originCountry) {
      console.log(this.company+' '+this.model+' from '+originCountry) ;
    }
}

let eCar = {
    company: 'Tata',
    model: 'Tiago'
}

Car.printName.call(eCar,'India');

o/p
Tata Tiago from India
-------------------------------------------------

apply()
- The apply() method, calls a function with a given this vallue, and arguments provided as an array.
- The apply() method is similar to the call() method.
- The only difference is the call() method takes arguments separately and the apply() method takes arguments as an array.

Example:
const Car = {
  printName : function(originCountry,continent) {
    console.log(this.company+' '+this.model+' from '+originCountry+' '+continent) ;
  }
}

let eCar = {
  company: 'Tata',
  model: 'Tiago'
}

Car.printName.apply(eCar,['India','Asia']);

-------------------------------------------------

bind() 
- Returns a bound function that which can be executed later.
- So bind() is basically used to bind and keep copy of that method and use it later.

The bind() method creates a new function that, when called, has its this keyword set to the provided value. 

It letâ€™s us explicitly define the value of this when calling a function.

const Car = {
  printName : function(originCountry,continent) {
    console.log(this.company+' '+this.model+' from '+originCountry+' '+continent) ;
  }
}

let eCar = {
  company: 'Tata',
  model: 'Tiago'
}

var printCar = Car.printName.bind(eCar,'India','Asia');
printCar();

---------------------------------------------------------------------------------------------------