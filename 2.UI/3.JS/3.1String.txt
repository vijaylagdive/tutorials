Q1. What is String in JS?
Ans:
Strings are useful for holding data that can be represented in text form.
JavaScript strings are used for storing and manipulating text.
--------------------------------------------------------------------------------------------------
Q2. Which are string method? 1.slice(), 2.substring(), 3.substr().
Ans:
1.slice(), 2.substring(), 3.substr().

1.slice():
Extracts a part of a string and returns the extracted part in a new string.
The method takes 2 parameters: the start position, and the end position (end not included).
If you omit the second parameter, the method will slice out the rest of the string:

ex1.
This example slices out a portion of a string from position 7 to position 12 (13-1):
let str = "Apple, Banana, Kiwi";
let part = str.slice(7, 13);
o/p: Banana

ex2.
If a parameter is negative, the position is counted from the end of the string.
This example slices out a portion of a string from position -12 to position -6.

let str = "Apple, Banana, Kiwi";
let part = str.slice(-12, -2);
Banana, Ki

2.substring()
substring() is similar to slice except that it doesnt accept negative arguments.
If you omit the second parameter, substring() will slice out the rest of the string.

3. substr()
substr is similar to slice except that the second parameter is lenght.
If you omit the second parameter, substr() will slice out the rest of the string.
---------------------------------------------------------------------------------------------------
Q3. Other important methods: 1.replace()  2.indexOf() 3.lastIndexOf() 4.search() 5.match() 6.include() 7.startsWith() 8.endsWith()
Ans:
1) replace()
The replace() method replaces a specified value with another value in a string.
e.g.
let text = "Please visit Microsoft!";
let newText = text.replace("Microsoft", "W3Schools");
then nexText will be: Please visit W3Schools!

The replace() method does not change the string it is called on. Returns new string.
The replace() method replaces only the first match.

To replace all matches, use a regular expression with a /g flag (global match):
e.g.
let text = "Please visit Microsoft and Microsoft!";
let newText = text.replace(/Microsoft/g, "W3Schools");
--------------------------------------------------
2)indexOf()
This method returns the index of (the position of) the first occurrence of a specified text in a given string:
var str = "Please locate where locate occurs!";
var pos = str.indexOf("locate"); //7
Return -1 if the text is not found.
--------------------------------------------------
3)lastIndexOf() 
var pos = str.lastIndexOf("locate");//20
Note: it counts space.
Return -1 if the text is not found.

Both methods accept a second parameter as the starting position for the search:
str.indexOf("locate", 15);
-------------------------------------------------
4)search()
The search() method searches a string for a specified value and returns the position of the match.
let str = "Please locate where 'locate' occurs!";
str.search("locate");


Difference between search() and indexOf()
- The search() method cannot take a second start position argument.
- The indexOf() method cannot take powerful search values (regular expressions).
-------------------------------------------------
5) match();
The match() method searches a string for a match against a regular expression, and returns the matches, as an Array object.

let text = "The rain in SPAIN stays mainly in the plain";
text.match(/ain/g);

o/p: Â ['ain', 'ain', 'ain']
------------------------------------------------
6) include()
The includes() method returns true if a string contains a specified value.

let text = "Hello world, welcome to the universe.";
text.includes("world");

text.includes("world", 12); //starting the search at positions 12

o/p true
------------------------------------------------
7) startsWith()
The startsWith() method returns true if a string begins with a specified value, otherwise false:

let text = "Hello world, welcome to the universe.";
text.startsWith("Hello");

o/p: true

string.startsWith(searchvalue, start)

The startsWith() method is case sensitive.

-------------------------------------------------
8. endsWith()
The endsWith() method returns true if a string ends with a specified value, otherwise false:
var text = "John Doe";
text.endsWith("Doe");

o/p: true


Check in the 11 first characters of a string ends with "world":

let text = "Hello world, welcome to the universe.";
text.endsWith("world", 11);

o/p: true
***********************************************************************************************************



